function start_timer(a, e) {
    var t = a;
    id = setInterval(function() {
        0 > t ? clearInterval(id) : (counter_string = 10 > t ? "0" + t.toString() : t.toString(), e.text("(" + counter_string + ")")), t--
    }, 1e3)
}

function cspmds_delete_polygon(a, e, t) {
    google.maps.event.addListener(t, "click", function() {
        if (t.getEditable() === !1) {
            t.setVisible(!1), jQuery("span.cspmds_edit_specific_polygon[data-map-id=" + a + "][data-polygon-id=" + e + "]").hide(), jQuery("span.cspmds_restore_specific_polygon[data-map-id=" + a + "][data-polygon-id=" + e + "]").show(), jQuery("span.cspmds_permanently_delete_specific_polygon[data-map-id=" + a + "][data-polygon-id=" + e + "]").show(), jQuery("span.cspmds_delete_specific_polygon[data-map-id=" + a + "][data-polygon-id=" + e + "]").hide();
            var s = jQuery("select.cspmds_select_predefined_area[data-map-id=" + a + "]");
            if (s.length > 0 && "undefined" != typeof s && "undefined" != typeof s[0].selectize) {
                var d = jQuery("span.cspmds_specific_polygon_id[data-map-id=" + a + "][data-polygon-id=" + e + "]").clone().children().remove().end().text(),
                    i = (jQuery("select.cspmds_select_predefined_area[data-map-id=" + a + "]").attr("placeholder"), jQuery("select.cspmds_select_predefined_area[data-map-id=" + a + "]").attr("data-multiSearch")),
                    o = s[0].selectize;
                o.removeItem(d, !0), o.refreshOptions(!1), "true" != i && (o.focus(), setTimeout(function() {
                    o.blur()
                }, 100))
            }
        }
        var _ = drawn_overlay[a],
            p = 0;
        for (poly_obj_id in _) _[poly_obj_id].getPaths() && _[poly_obj_id].getVisible() === !0 && ++p;
        0 == p && jQuery("div.cspmds_cancel_delete_area[data-map-id=" + a + "]").trigger("click")
    })
}

function cspmds_edit_poly_vertex(a, e, t) {
    google.maps.event.addListener(t, "dblclick", function(a) {
        "undefined" != typeof a.vertex && null !== a.vertex && t.getPaths().getArray()[0].length > 3 && t.getPath().removeAt(a.vertex)
    })
}

function cspmds_draw_default_polygon(a, e, t) {
    var s = "undefined" != typeof progress_map_vars.map_script_args[a] ? a : "initial",
        d = jQuery("div#codespacing_progress_map_div_" + a),
        i = d.gmap3("get"),
        o = jQuery("div.cspmds_add_area[data-map-id=" + a + "]").attr("data-show-carousel"),
        _ = jQuery("div.cspmds_add_area[data-map-id=" + a + "]").attr("data-ext");
    "undefined" != typeof drawn_overlay[a] && 0 != cspm_object_size(drawn_overlay[a]) || (drawn_overlay[a] = {});
    var p = e,
        r = jQuery("div.cspmds_new_poly_style[data-map-id=" + a + "]");
    overlay_default_style[a] = {
        fillColor: r.attr("data-fillColor"),
        fillOpacity: r.attr("data-fillOpacity"),
        strokeColor: r.attr("data-strokeColor"),
        strokeOpacity: r.attr("data-strokeOpacity"),
        strokePosition: google.maps.StrokePosition[r.attr("data-strokePosition")],
        strokeWeight: r.attr("data-strokeWeight")
    };
    var n = default_areas[a][p],
        l = new google.maps.Polygon(jQuery.extend(overlay_default_style[a], {
            paths: n,
            polygonID: p,
            map: i,
            clickable: !1,
            editable: !1,
            draggable: !1,
            geodesic: !1,
            zIndex: 1,
            polygonID: p,
            polygonTag: "DMS"
        }));
    drawn_overlay[a][p] = l, l.setMap(i), setTimeout(function() {
        if ("undefined" != typeof drawn_overlay[a] && cspm_object_size(drawn_overlay[a]) > 0 && (jQuery("div.cspmds_edit_area[data-map-id=" + a + "]").show(), jQuery("div.cspmds_cancel_edit_area[data-map-id=" + a + "]").hide(), jQuery("div.cspmds_delete_area[data-map-id=" + a + "]").show(), jQuery("div.cspmds_cancel_delete_area[data-map-id=" + a + "]").hide(), jQuery("div.cspmds_add_area[data-map-id=" + a + "], div.cspmds_edit_area[data-map-id=" + a + "], div.cspmds_delete_area[data-map-id=" + a + "], div.cspmds_reset_drawing[data-map-id=" + a + "]").removeClass("cspmds_btn_disabled"), "function" == typeof cspmds_poly_list_item_output)) {
            var e = t,
                s = cspmds_poly_list_item_output(a, p, e);
            jQuery("div.cspmds_bottom_container[data-map-id=" + a + "]").show(), jQuery("ul.cspmds_draw_history_list[data-map-id=" + a + "]").append(s)
        }
    }, 100), setTimeout(function() {
        var e = {};
        e[a] = [];
        var t = new google.maps.LatLngBounds;
        d.gmap3({
            get: {
                name: "marker",
                tag: "to_cluster",
                all: !0,
                callback: function(i) {
                    cspm_hide_all_markers(d).done(function() {
                        var p = 0,
                            r = drawn_overlay[a];
                        for (poly_obj_id in r) {
                            var n = 0,
                                l = poly_obj_id;
                            if (r[poly_obj_id].getVisible() === !0) {
                                r[poly_obj_id].getPath().forEach(function(a) {
                                    t.extend(a)
                                }), d.gmap3("get").fitBounds(t), jQuery.each(i, function(t, s) {
                                    var d = s.id,
                                        i = s.position;
                                    cspm_polygon_contains_marker(r[poly_obj_id], i.lat(), i.lng()) && (e[a][p] = parseInt(d), p++, n++)
                                });
                                var c = n > 1 ? cspmds_vars.items_text : cspmds_vars.item_text;
                                jQuery("small.cspmds_area_count_posts[data-map-id=" + a + "][data-polygon-id=" + l + "]").text(" (" + n + " " + c + ")")
                            }
                        }
                        if (cspm_set_markers_visibility(d, a, null, 0, post_lat_lng_coords[a], e[a], !0), cspm_simple_clustering(d, a), cspm_global_object.posts_to_retrieve[a] = e[a], "yes" == progress_map_vars.map_script_args[s].show_posts_count && jQuery("span.the_count_" + a).empty().html(e[a].length), "no" == o && "cspml_list" == _) {
                            var m = !1,
                                g = "filter";
                            jQuery("div#cspml_listings_container[data-map-id=" + a + "]").attr("data-first-load", "false"), "function" == typeof cspml_show_listings_animation && cspml_show_listings_animation(a), setTimeout(function() {
                                "function" == typeof cspml_filter_listings && "undefined" != typeof window.cspm_global_object.posts_to_retrieve[a] ? cspml_filter_listings(a, window.cspm_global_object.posts_to_retrieve[a], !0, "", m, g) : "function" == typeof cspml_hide_listings_animation && cspml_hide_listings_animation(a)
                            }, 1e3)
                        } else setTimeout(function() {
                            cspm_rewrite_carousel(a, o, e[a])
                        }, 500)
                    })
                }
            }
        })
    }, 100)
}

function cspmds_poly_list_item_output(a, e, t) {
    return '<li class="cspmds_drawn_polygon cspm_border_radius" data-map-id="' + a + '" data-polygon-id="' + e + '"><span class="cspmds_specific_polygon_id" data-map-id="' + a + '" data-polygon-id="' + e + '">' + t + '<small class="cspmds_area_count_posts" data-map-id="' + a + '" data-polygon-id="' + e + '"></small></span><span style="float:right;"><span class="cspmds_edit_specific_polygon" data-map-id="' + a + '" data-polygon-id="' + e + '">' + cspmds_vars.edit_text + '</span><span class="cspmds_cancel_edit_specific_polygon" data-map-id="' + a + '" data-polygon-id="' + e + '" style="display:none;">' + cspmds_vars.cancel_text + '</span><span class="cspmds_restore_specific_polygon" data-map-id="' + a + '" data-polygon-id="' + e + '" style="display:none;">' + cspmds_vars.restore_text + '</span><span class="cspmds_delete_specific_polygon" data-map-id="' + a + '" data-polygon-id="' + e + '">' + cspmds_vars.delete_text + '</span><span class="cspmds_permanently_delete_specific_polygon" data-map-id="' + a + '" data-polygon-id="' + e + '" style="display:none;">' + cspmds_vars.permanent_delete_text + '</span></span><span style="clear:both;"></span></li>'
}
var drawingManager = {},
    drawn_overlay = {},
    overlay_default_style = {},
    overlay_edit_style = {},
    overlay_delete_style = {},
    overlay_highlight_style = {},
    default_areas = {};
! function(a) {
    a(document).on("click", "div.cspmds_draw_search_area", function() {
        var e = a(this).attr("data-map-id");
        a("div.cspm_top_element:not(.cspmds_drawing_tools_container[data-map-id=" + e + "])").hide(), a("div.cspmds_drawing_tools_container[data-map-id=" + e + "]").slideToggle({
            duration: 0,
            easing: "easeOutCirc"
        }), "undefined" != typeof drawn_overlay[e] && 0 != cspm_object_size(drawn_overlay[e]) || (drawn_overlay[e] = {});
        var t = a("div.cspmds_new_poly_style[data-map-id=" + e + "]");
        overlay_default_style[e] = {
            fillColor: t.attr("data-fillColor"),
            fillOpacity: t.attr("data-fillOpacity"),
            strokeColor: t.attr("data-strokeColor"),
            strokeOpacity: t.attr("data-strokeOpacity"),
            strokePosition: google.maps.StrokePosition[t.attr("data-strokePosition")],
            strokeWeight: t.attr("data-strokeWeight")
        };
        var s = a("div.cspmds_edit_poly_style[data-map-id=" + e + "]");
        overlay_edit_style[e] = {
            fillColor: s.attr("data-fillColor"),
            fillOpacity: s.attr("data-fillOpacity"),
            strokeColor: s.attr("data-strokeColor"),
            strokeOpacity: s.attr("data-strokeOpacity"),
            strokePosition: google.maps.StrokePosition[s.attr("data-strokePosition")],
            strokeWeight: s.attr("data-strokeWeight")
        };
        var d = a("div.cspmds_delete_poly_style[data-map-id=" + e + "]");
        overlay_delete_style[e] = {
            fillColor: d.attr("data-fillColor"),
            fillOpacity: d.attr("data-fillOpacity"),
            strokeColor: d.attr("data-strokeColor"),
            strokeOpacity: d.attr("data-strokeOpacity"),
            strokePosition: google.maps.StrokePosition[d.attr("data-strokePosition")],
            strokeWeight: d.attr("data-strokeWeight")
        };
        var i = a("div.cspmds_highlight_poly_style[data-map-id=" + e + "]");
        overlay_highlight_style[e] = {
            fillColor: i.attr("data-fillColor"),
            fillOpacity: i.attr("data-fillOpacity"),
            strokeColor: i.attr("data-strokeColor"),
            strokeOpacity: i.attr("data-strokeOpacity"),
            strokePosition: google.maps.StrokePosition[i.attr("data-strokePosition")],
            strokeWeight: i.attr("data-strokeWeight")
        }
    }), a(document).on("click", "div.cspmds_add_area", function() {
        if (!a(this).hasClass("cspmds_btn_disabled")) {
            var e = a(this).attr("data-map-id"),
                t = a(this).attr("data-show-carousel"),
                s = a(this).attr("data-ext"),
                d = a(this).attr("data-drawing-method");
            a(this).hide(), a("div.cspmds_cancel_add_area[data-map-id=" + e + "]").show(), a("div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "], div.cspmds_reset_drawing[data-map-id=" + e + "], div.cspmds_search_area[data-map-id=" + e + "]").addClass("cspmds_btn_disabled"), setTimeout(function() {
                a("div.cspmds_drawing_tools_container[data-map-id=" + e + "]").slideToggle({
                    duration: 0,
                    easing: "easeOutCirc"
                })
            }, 500);
            var i = "click" == d ? cspmds_vars.click_to_draw_search_area : cspmds_vars.move_to_draw_search_area,
                o = a("div.cspm_map_orange_msg_widget[data-map-id=" + e + "]");
            o.text(i).removeClass("fadeOut").addClass("cspm_animated fadeIn").css({
                display: "block"
            }), cspm_popup_msg(e, "info", "", i);
            var _ = "undefined" != typeof progress_map_vars.map_script_args[e] ? e : "initial",
                p = jQuery("div#codespacing_progress_map_div_" + e),
                r = p.gmap3("get"),
                n = new Date,
                l = n.getTime(),
                c = function(i) {
                    if (o.removeClass("fadeIn").addClass("fadeOut").css({
                            display: "none"
                        }), a("div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "], div.cspmds_reset_drawing[data-map-id=" + e + "]").removeClass("cspmds_btn_disabled"), a("div.cspmds_cancel_add_area[data-map-id=" + e + "]").hide(), a("div.cspmds_add_area[data-map-id=" + e + "]").show(), "undefined" != typeof i && "undefined" != typeof i.getPaths) {
                        drawn_overlay[e][l] = i, "click" == d && drawingManager[e].setMap(null), "undefined" != typeof NProgress && (NProgress.configure({
                            parent: "div#codespacing_progress_map_div_" + e,
                            showSpinner: !0
                        }), NProgress.start());
                        var r = (i.getPaths(), cspmds_vars.area_text + " " + cspm_object_size(drawn_overlay[e])),
                            n = cspmds_poly_list_item_output(e, l, r);
                        a("div.cspmds_bottom_container[data-map-id=" + e + "]").show(), a("ul.cspmds_draw_history_list[data-map-id=" + e + "]").append(n);
                        var c = {};
                        c[e] = [];
                        var m = new google.maps.LatLngBounds;
                        p.gmap3({
                            get: {
                                name: "marker",
                                tag: "to_cluster",
                                all: !0,
                                callback: function(d) {
                                    cspm_hide_all_markers(p).done(function() {
                                        var i = 0,
                                            o = drawn_overlay[e];
                                        for (poly_obj_id in o) {
                                            var r = 0,
                                                n = poly_obj_id;
                                            if (o[poly_obj_id].getVisible() === !0 && "undefined" != typeof o[poly_obj_id].getPath()) {
                                                o[poly_obj_id].getPath().forEach(function(a) {
                                                    m.extend(a)
                                                }), p.gmap3("get").fitBounds(m), a.each(d, function(a, t) {
                                                    var s = t.id,
                                                        d = t.position;
                                                    cspm_polygon_contains_marker(o[poly_obj_id], d.lat(), d.lng()) && (c[e][i] = parseInt(s), i++, r++)
                                                });
                                                var l = r > 1 ? cspmds_vars.items_text : cspmds_vars.item_text;
                                                a("small.cspmds_area_count_posts[data-map-id=" + e + "][data-polygon-id=" + n + "]").text(" (" + r + " " + l + ")")
                                            }
                                        }
                                        if (cspm_set_markers_visibility(p, e, null, 0, post_lat_lng_coords[e], c[e], !0), cspm_simple_clustering(p, e), cspm_global_object.posts_to_retrieve[e] = c[e], "yes" == progress_map_vars.map_script_args[_].show_posts_count && a("span.the_count_" + e).empty().html(c[e].length), "no" == t && "cspml_list" == s) {
                                            var g = "filter";
                                            a("div#cspml_listings_container[data-map-id=" + e + "]").attr("data-first-load", "false"), "function" == typeof cspml_show_listings_animation && cspml_show_listings_animation(e);
                                            var v = !1;
                                            setTimeout(function() {
                                                "function" == typeof cspml_filter_listings && "undefined" != typeof window.cspm_global_object.posts_to_retrieve[e] ? cspml_filter_listings(e, window.cspm_global_object.posts_to_retrieve[e], !0, "", v, g) : "function" == typeof cspml_hide_listings_animation && cspml_hide_listings_animation(e)
                                            }, 1e3)
                                        } else setTimeout(function() {
                                            cspm_rewrite_carousel(e, t, c[e])
                                        }, 500)
                                    }), "undefined" != typeof NProgress && NProgress.done()
                                }
                            }
                        })
                    }
                };
            "click" == d ? (drawingManager[e] = new google.maps.drawing.DrawingManager({
                map: r,
                drawingControl: !1,
                drawingMode: google.maps.drawing.OverlayType.POLYGON,
                polygonOptions: a.extend(overlay_default_style[e], {
                    clickable: !1,
                    editable: !1,
                    draggable: !1,
                    geodesic: !1,
                    zIndex: 1,
                    polygonID: l,
                    polygonTag: "DMS"
                })
            }), google.maps.event.addListener(drawingManager[e], "polygoncomplete", function(a) {
                c(a)
            })) : (google.maps.event.addDomListener(r.getDiv(), "mouseover", function() {
                r.setOptions({
                    draggableCursor: "crosshair"
                })
            }), google.maps.event.addDomListener(r.getDiv(), "mousedown", function() {
                r.setOptions({
                    gestureHandling: "none",
                    clickableIcons: !1
                });
                var t = new google.maps.Polyline({
                    map: r
                });
                t.setOptions(a.extend(overlay_default_style[e], {
                    clickable: !1,
                    editable: !1,
                    draggable: !1,
                    geodesic: !1,
                    zIndex: 1
                }));
                var s = google.maps.event.addListener(r, "mousemove", function(a) {
                    t.getPath().push(a.latLng)
                });
                google.maps.event.addListenerOnce(r, "mouseup", function() {
                    google.maps.event.removeListener(s);
                    var d = t.getPath();
                    if (t.setMap(null), d.getArray().length < 3) return o.removeClass("fadeIn"), void setTimeout(function() {
                        o.addClass("flash"), o.one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", function() {
                            o.removeClass("flash")
                        })
                    }, 100);
                    var i = t.simplifyLine();
                    if (i.length > 3) {
                        var p = new google.maps.Polygon({
                            map: r,
                            paths: i
                        });
                        p.setOptions(a.extend(overlay_default_style[e], {
                            clickable: !1,
                            editable: !1,
                            draggable: !1,
                            geodesic: !1,
                            zIndex: 1,
                            polygonID: l,
                            polygonTag: "DMS"
                        }))
                    } else cspm_popup_msg(e, "detailed_warning", cspmds_vars.oops_something_wrong_txt, cspmds_vars.freehand_draw_wrong_polygon_msg), setTimeout(function() {
                        a("div.cspmds_cancel_add_area[data-map-id=" + e + "], div.cspmds_cancel_edit_area[data-map-id=" + e + "], div.cspmds_cancel_delete_area[data-map-id=" + e + "]").hide(), a("div.cspmds_add_area[data-map-id=" + e + "], div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "]").show(), a("div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "], div.cspmds_reset_drawing[data-map-id=" + e + "], div.cspmds_search_area[data-map-id=" + e + "]").addClass("cspmds_btn_disabled")
                    }, 100);
                    google.maps.event.clearListeners(r.getDiv(), "mousedown"), google.maps.event.clearListeners(r.getDiv(), "mouseover"), r.setOptions({
                        gestureHandling: "false" == progress_map_vars.map_script_args[_].scrollwheel ? "auto" : "cooperative",
                        draggableCursor: "auto",
                        clickableIcons: "false" != progress_map_vars.map_script_args[_].clickableIcons
                    }), c(p)  
                })
            }))
        }
    }), a(document).on("click", "div.cspmds_cancel_add_area", function() {
        var e = a(this).attr("data-map-id"),
            t = a(this).attr("data-drawing-method");
        a(this).hide(), a("div.cspmds_add_area[data-map-id=" + e + "]").show();
        var s = a("div.cspm_map_orange_msg_widget[data-map-id=" + e + "]");
        if (s.removeClass("fadeIn").addClass("fadeOut").css({
                display: "none"
            }), "undefined" != typeof drawingManager[e] && "undefined" != typeof drawingManager[e].setMap() && "click" == t && drawingManager[e].setMap(null), "freehand" == t) {
            var d = jQuery("div#codespacing_progress_map_div_" + e),
                i = d.gmap3("get");
            google.maps.event.clearListeners(i.getDiv(), "mouseover"), i.setOptions({
                draggableCursor: "auto"
            })
        }
        var o = drawn_overlay[e],
            _ = 0;
        for (poly_obj_id in o) o[poly_obj_id].getPaths() && o[poly_obj_id].getVisible() === !0 && ++_;
        _ > 0 && a("div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "], div.cspmds_reset_drawing[data-map-id=" + e + "]").removeClass("cspmds_btn_disabled")
    }), a(document).on("click", "div.cspmds_search_area", function(e) {
        if (!a(this).hasClass("cspmds_btn_disabled") || e.isTrigger) {
            var t = a(this).attr("data-map-id"),
                s = a(this).attr("data-show-carousel"),
                d = a(this).attr("data-ext");
            a(this).addClass("cspmds_btn_disabled"), a("div.cspmds_edit_area[data-map-id=" + t + "]").show(), a("div.cspmds_cancel_edit_area[data-map-id=" + t + "]").hide(), a("div.cspmds_delete_area[data-map-id=" + t + "]").show(), a("div.cspmds_cancel_delete_area[data-map-id=" + t + "]").hide(), a("div.cspmds_add_area[data-map-id=" + t + "], div.cspmds_edit_area[data-map-id=" + t + "], div.cspmds_delete_area[data-map-id=" + t + "], div.cspmds_reset_drawing[data-map-id=" + t + "]").removeClass("cspmds_btn_disabled"), a("span.cspmds_cancel_edit_specific_polygon[data-map-id=" + t + "]").hide(), a("div.cspmds_cancel_add_area[data-map-id=" + t + "]").trigger("click");
            var i = "undefined" != typeof progress_map_vars.map_script_args[t] ? t : "initial",
                o = jQuery("div#codespacing_progress_map_div_" + t),
                _ = (o.gmap3("get"), a("div.cspm_map_orange_msg_widget[data-map-id=" + t + "]"));
            _.removeClass("fadeIn").addClass("fadeOut").css({
                display: "none"
            }), "undefined" != typeof NProgress && (NProgress.configure({
                parent: "div#codespacing_progress_map_div_" + t,
                showSpinner: !0
            }), NProgress.start());
            var p = {};
            p[t] = [];
            var r = new google.maps.LatLngBounds;
            o.gmap3({
                get: {
                    name: "marker",
                    tag: "to_cluster",
                    all: !0,
                    callback: function(e) {
                        var _ = drawn_overlay[t],
                            n = 0;
                        cspm_hide_all_markers(o).done(function() {
                            var l = 0;
                            for (poly_obj_id in _) {
                                var c = 0,
                                    m = poly_obj_id;
                                if (_[poly_obj_id].getVisible() === !0) {
                                    _[poly_obj_id].setEditable(!1), _[poly_obj_id].setOptions(overlay_default_style[t]), n++, a("span.cspmds_edit_specific_polygon[data-map-id=" + t + "][data-polygon-id=" + m + "]").show(), _[poly_obj_id].getPath().forEach(function(a) {
                                        r.extend(a)
                                    }), o.gmap3("get").fitBounds(r), a.each(e, function(a, e) {
                                        var s = e.id,
                                            d = e.position;
                                        cspm_polygon_contains_marker(_[poly_obj_id], d.lat(), d.lng()) && (p[t][l] = parseInt(s), l++, c++)
                                    });
                                    var g = c > 1 ? "items" : "item";
                                    a("small.cspmds_area_count_posts[data-map-id=" + t + "][data-polygon-id=" + m + "]").text(" (" + c + " " + g + ")")
                                }
                            }
                            if (0 == n && a("div.cspmds_edit_area[data-map-id=" + t + "], div.cspmds_delete_area[data-map-id=" + t + "]").addClass("cspmds_btn_disabled"), 0 == cspm_object_size(_) && 0 == n && a("div.cspmds_reset_drawing[data-map-id=" + t + "]").addClass("cspmds_btn_disabled"), cspm_set_markers_visibility(o, t, null, 0, post_lat_lng_coords[t], p[t], !0), cspm_simple_clustering(o, t), cspm_global_object.posts_to_retrieve[t] = p[t], "yes" == progress_map_vars.map_script_args[i].show_posts_count && a("span.the_count_" + t).empty().html(p[t].length), "no" == s && "cspml_list" == d) {
                                var v = "filter";
                                a("div#cspml_listings_container[data-map-id=" + t + "]").attr("data-first-load", "false"), "function" == typeof cspml_show_listings_animation && cspml_show_listings_animation(t);
                                var y = !1;
                                setTimeout(function() {
                                    "function" == typeof cspml_filter_listings && "undefined" != typeof window.cspm_global_object.posts_to_retrieve[t] ? cspml_filter_listings(t, window.cspm_global_object.posts_to_retrieve[t], !0, "", y, v) : "function" == typeof cspml_hide_listings_animation && cspml_hide_listings_animation(t)
                                }, 1e3)
                            } else setTimeout(function() {
                                cspm_rewrite_carousel(t, s, p[t])
                            }, 500)
                        }), "undefined" != typeof NProgress && NProgress.done()
                    }
                }
            })
        }
    }), a(document).on("click", "div.cspmds_edit_area", function() {
        if (!a(this).hasClass("cspmds_btn_disabled")) {
            var e = a(this).attr("data-map-id");
            a(this).hide(), a("div.cspmds_cancel_edit_area[data-map-id=" + e + "]").show(), a("div.cspmds_add_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "], div.cspmds_reset_drawing[data-map-id=" + e + "]").addClass("cspmds_btn_disabled"), a("div.cspmds_search_area[data-map-id=" + e + "]").removeClass("cspmds_btn_disabled");
            var t = jQuery("div#codespacing_progress_map_div_" + e);
            cspm_hide_all_markers(t).done(function() {
                cspm_simple_clustering(t, e);
                var a = t.gmap3({
                    get: {
                        name: "infowindow"
                    }
                });
                a && a.close()
            });
            var s = drawn_overlay[e];
            for (poly_obj_id in s) s[poly_obj_id].getPaths() && s[poly_obj_id].getVisible() === !0 && (s[poly_obj_id].setEditable(!0), s[poly_obj_id].setOptions(a.extend(overlay_edit_style[e], {
                clickable: !1
            })), cspmds_edit_poly_vertex(e, poly_obj_id, s[poly_obj_id]))
        }
    }), a(document).on("click", "div.cspmds_cancel_edit_area", function() {
        var e = a(this).attr("data-map-id");
        a(this).hide(), a("div.cspmds_edit_area[data-map-id=" + e + "]").show(), a("div.cspmds_add_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "], div.cspmds_reset_drawing[data-map-id=" + e + "]").removeClass("cspmds_btn_disabled");
        var t = drawn_overlay[e];
        for (poly_obj_id in t) t[poly_obj_id].getPaths() && t[poly_obj_id].getVisible() === !0 && (t[poly_obj_id].setEditable(!1), t[poly_obj_id].setOptions(a.extend(overlay_default_style[e], {
            clickable: !1
        })));
        a("div.cspmds_search_area[data-map-id=" + e + "]").trigger("click")
    }), a(document).on("click", "span.cspmds_edit_specific_polygon", function() {
        var e = a(this).attr("data-map-id"),
            t = a(this).attr("data-polygon-id"),
            s = drawn_overlay[e],
            d = s[t],
            i = jQuery("div#codespacing_progress_map_div_" + e);
        cspm_hide_all_markers(i).done(function() {
            cspm_simple_clustering(i, e);
            var a = i.gmap3({
                get: {
                    name: "infowindow"
                }
            });
            a && a.close()
        }), cspmds_edit_poly_vertex(e, t, d), d.getPaths() && d.getVisible() === !0 && (d.setEditable(!0), d.setOptions(a.extend(overlay_edit_style[e], {
            clickable: !1
        }))), a(this).hide(), a("span.cspmds_cancel_edit_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + t + "]").show(), a("div.cspmds_search_area[data-map-id=" + e + "]").removeClass("cspmds_btn_disabled")
    }), a(document).on("click", "span.cspmds_cancel_edit_specific_polygon", function() {
        var e = a(this).attr("data-map-id"),
            t = a(this).attr("data-polygon-id"),
            s = drawn_overlay[e],
            d = s[t];
        d.getPaths() && d.getVisible() === !0 && (d.setEditable(!1), d.setOptions(a.extend(overlay_highlight_style[e], {
            clickable: !1
        }))), a(this).hide(), a("span.cspmds_edit_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + t + "]").show(), a("div.cspmds_search_area[data-map-id=" + e + "]").trigger("click")
    }), a(document).on("click", "div.cspmds_delete_area", function() {
        if (!a(this).hasClass("cspmds_btn_disabled")) {
            var e = a(this).attr("data-map-id");
            a(this).hide(), a("div.cspmds_cancel_delete_area[data-map-id=" + e + "]").show(), a("div.cspmds_add_area[data-map-id=" + e + "], div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_reset_drawing[data-map-id=" + e + "], div.cspmds_search_area[data-map-id=" + e + "]").addClass("cspmds_btn_disabled");
            var t = cspmds_vars.click_to_remove_area;
            cspm_popup_msg(e, "info", "", t);
            var s = jQuery("div#codespacing_progress_map_div_" + e);
            cspm_hide_all_markers(s).done(function() {
                cspm_simple_clustering(s, e)
            });
            var d = drawn_overlay[e];
            for (poly_obj_id in d) d[poly_obj_id].getPaths() && d[poly_obj_id].getVisible() === !0 && (d[poly_obj_id].setOptions(a.extend(overlay_delete_style[e], {
                clickable: !0,
                editable: !1
            })), cspmds_delete_polygon(e, poly_obj_id, d[poly_obj_id]));
            var i = s.gmap3({
                get: {
                    name: "infowindow"
                }
            });
            i && i.close()
        }
    }), a(document).on("click", "div.cspmds_cancel_delete_area", function() {
        var e = a(this).attr("data-map-id");
        a(this).hide(), a("div.cspmds_delete_area[data-map-id=" + e + "]").show();
        var t = drawn_overlay[e],
            s = 0;
        for (poly_obj_id in t) t[poly_obj_id].getPaths() && t[poly_obj_id].getVisible() === !0 && (t[poly_obj_id].setOptions(a.extend(overlay_default_style[e], {
            clickable: !1,
            editable: !1
        })), ++s);
        0 == s && (a("div.cspmds_add_area[data-map-id=" + e + "]").removeClass("cspmds_btn_disabled"), a("div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "], div.cspmds_reset_drawing[data-map-id=" + e + "], div.cspmds_search_area[data-map-id=" + e + "]").addClass("cspmds_btn_disabled")), a("div.cspmds_search_area[data-map-id=" + e + "]").trigger("click")
    }), a(document).on("click", "span.cspmds_delete_specific_polygon", function() {
        var e = a(this).attr("data-map-id"),
            t = a(this).attr("data-polygon-id"),
            s = jQuery("div#codespacing_progress_map_div_" + e),
            d = drawn_overlay[e],
            i = d[t];
        if (cspmds_delete_polygon(e, t, i), i.getPaths()) {
            i.setVisible(!1);
            var o = s.gmap3({
                get: {
                    name: "infowindow"
                }
            });
            o && o.close()
        }
        a(this).hide(), a("span.cspmds_permanently_delete_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + t + "]").show(), a("span.cspmds_edit_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + t + "]").hide(), a("span.cspmds_cancel_edit_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + t + "]").hide(), a("span.cspmds_restore_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + t + "]").show(), a("div.cspmds_search_area[data-map-id=" + e + "]").trigger("click")
    }), a(document).on("click", "span.cspmds_permanently_delete_specific_polygon", function() {
        var e = a(this).attr("data-map-id"),
            t = a(this).attr("data-polygon-id");
        iziToast.question({
            id: "permanently_delete_polygon",
            title: "",
            timeout: !1,
            message: cspmds_vars.confirm_operation_msg,
            position: "center",
            transitionIn: "fadeIn",
            close: !1,
            overlay: !0,
            overlayClose: !1,
            drag: !1,
            zindex: 99999,
            toastOnce: !0,
            maxWidth: null,
            buttons: [
                ["<button>" + cspmds_vars.confirm_txt + "</button>", function(s, d) {
                    var i = drawn_overlay[e],
                        o = i[t];
                    o.getPaths() && (o.setMap(null), o.setVisible(!1)), a("li.cspmds_drawn_polygon[data-map-id=" + e + "][data-polygon-id=" + t + "]").remove(), "undefined" != typeof drawn_overlay[e] && delete drawn_overlay[e][t], 0 == cspm_object_size(drawn_overlay[e]) && (a("div.cspmds_bottom_container, ul.cspmds_draw_history_list").hide(), a("div.cspmds_top_container").show()), s.hide({
                        transitionOut: "fadeOut"
                    }, d, "button")
                }, !0],
                ["<button>" + cspmds_vars.ignore_txt + "</button>", function(a, e) {
                    a.hide({
                        transitionOut: "fadeOut"
                    }, e, "button")
                }]
            ]
        })
    }), a(document).on("click", "span.cspmds_restore_specific_polygon", function() {
        var e = a(this).attr("data-map-id"),
            t = a(this).attr("data-polygon-id"),
            s = drawn_overlay[e],
            d = s[t];
        d.getEditable() === !1 && (d.setVisible(!0), d.setOptions(a.extend(overlay_default_style[e], {
            clickable: !1
        }))), a(this).hide(), a("span.cspmds_edit_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + t + "]").show(), a("span.cspmds_permanently_delete_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + t + "]").hide(), a("span.cspmds_delete_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + t + "]").show(), a("div.cspmds_search_area[data-map-id=" + e + "]").trigger("click")
    }), a(document).on("click", "div.cspmds_reset_drawing", function() {
        if (!a(this).hasClass("cspmds_btn_disabled")) {
            var e = a(this).attr("data-map-id");
            a(this).hide(), a("div.cspmds_confirm_reset_drawing[data-map-id=" + e + "]").show(1, start_timer(5, a("span.cspmds_reset_counter[data-map-id=" + e + "]"))), setTimeout(function() {
                a("div.cspmds_reset_drawing[data-map-id=" + e + "]").show(), a("div.cspmds_confirm_reset_drawing[data-map-id=" + e + "]").hide(), a("span.cspmds_reset_counter[data-map-id=" + e + "]").text("")
            }, 7e3)
        }
    }), a(document).on("click", "div.cspmds_confirm_reset_drawing", function() {
        var e = a(this).attr("data-map-id");
        "undefined" != typeof NProgress && (NProgress.configure({
            parent: "div#codespacing_progress_map_div_" + e,
            showSpinner: !0
        }), NProgress.start()), a(this).hide(), a("div.cspmds_reset_drawing[data-map-id=" + e + "]").show(), a("div.cspmds_cancel_add_area[data-map-id=" + e + "], div.cspmds_cancel_edit_area[data-map-id=" + e + "], div.cspmds_cancel_delete_area[data-map-id=" + e + "]").hide(), a("div.cspmds_add_area[data-map-id=" + e + "], div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "]").show(), a("div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "], div.cspmds_reset_drawing[data-map-id=" + e + "], div.cspmds_search_area[data-map-id=" + e + "]").addClass("cspmds_btn_disabled"), a("li.cspmds_drawn_polygon[data-map-id=" + e + "]").remove();
        var t = a(this).attr("data-show-carousel"),
            s = a(this).attr("data-ext"),
            d = a("div.cspmds_map_orange_msg_widget[data-map-id=" + e + "]");
        d.removeClass("fadeIn").addClass("fadeOut").css({
            display: "none"
        });
        var i = ("undefined" != typeof progress_map_vars.map_script_args[e] ? e : "initial", a("div#codespacing_progress_map_div_" + e));
        if ("undefined" != typeof drawn_overlay[e]) {
            var o = drawn_overlay[e];
            if (cspm_object_size(o) > 0)
                for (poly_obj_id in o) o[poly_obj_id].getPaths() && o[poly_obj_id].getVisible() === !0 && (o[poly_obj_id].setMap(null), o[poly_obj_id].setVisible(!1)), delete drawn_overlay[e][poly_obj_id];
            else "undefined" != typeof drawingManager[e] && "undefined" != typeof drawingManager[e].setMap() && drawingManager[e].setMap(null);
            var _ = i.gmap3({
                get: {
                    name: "infowindow"
                }
            });
            _ && _.close(), 0 == cspm_object_size(o) && (a("div.cspmds_bottom_container, ul.cspmds_draw_history_list").hide(), a("div.cspmds_top_container").show())
        }
        var p = jQuery("select.cspmds_select_predefined_area[data-map-id=" + e + "]");
        if (p.length > 0 && "undefined" != typeof p && "undefined" != typeof p[0].selectize) {
            var r = p[0].selectize;
            r.clear(!0)
        }
        "undefined" != typeof NProgress && NProgress.set(.5), cspmds_reset_drawing(e, t, s), "undefined" != typeof NProgress && NProgress.done()
    }), a(document).on("click", "div.cspmds_toggle_history", function() {
        var e = a(this).attr("data-map-id");
        a("div.cspmds_top_container[data-map-id=" + e + "]").slideToggle({
            duration: 0,
            easing: "easeOutCirc",
            complete: function() {
                a("ul.cspmds_draw_history_list[data-map-id=" + e + "]").slideToggle({
                    duration: 0,
                    easing: "easeOutBack"
                })
            }
        }), a("div.cspmds_edit_area[data-map-id=" + e + "]").show(), a("div.cspmds_cancel_edit_area[data-map-id=" + e + "]").hide(), a("div.cspmds_delete_area[data-map-id=" + e + "]").show(), a("div.cspmds_cancel_delete_area[data-map-id=" + e + "]").hide(), a("div.cspmds_add_area[data-map-id=" + e + "], div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "], div.cspmds_reset_drawing[data-map-id=" + e + "]").removeClass("cspmds_btn_disabled"), a("div.cspmds_cancel_add_area[data-map-id=" + e + "]").trigger("click");
        var t = 0,
            s = 0,
            d = drawn_overlay[e];
        for (poly_obj_id in d) {
            d[poly_obj_id].getPaths() && d[poly_obj_id].getVisible() === !0 && (++s, d[poly_obj_id].getEditable() === !0 && ++t, d[poly_obj_id].setOptions(a.extend(overlay_default_style[e], {
                clickable: !1,
                editable: !1
            })));
            var i = poly_obj_id;
            a("span.cspmds_cancel_edit_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + i + "]").is(":visible") && (a("span.cspmds_cancel_edit_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + i + "]").hide(), a("span.cspmds_edit_specific_polygon[data-map-id=" + e + "][data-polygon-id=" + i + "]").show())
        }
        cspm_object_size(d) > 0 && 0 == s && a("div.cspmds_edit_area[data-map-id=" + e + "], div.cspmds_delete_area[data-map-id=" + e + "]").addClass("cspmds_btn_disabled"), t > 0 ? a("div.cspmds_search_area[data-map-id=" + e + "]").trigger("click") : a("div.cspmds_search_area[data-map-id=" + e + "]").addClass("cspmds_btn_disabled")
    }), a(document).on("click", "span.cspmds_specific_polygon_id", function() {
        var e = a(this).attr("data-map-id"),
            t = a(this).attr("data-polygon-id"),
            s = a(this).text(),
            d = drawn_overlay[e],
            i = d[t];
        if (i.getPaths() && i.getVisible() === !0) {
            var o = jQuery("div#codespacing_progress_map_div_" + e),
                _ = o.gmap3("get"),
                p = new google.maps.LatLngBounds;
            i.getPath().forEach(function(a) {
                p.extend(a)
            }), _.fitBounds(p);
            var r = p.getCenter();
            _.panTo(r), _.setCenter(r);
            var n = google.maps.geometry.spherical.computeArea(i.getPath());
            if (n >= 1e6) var l = n / 1e6,
                c = l.toFixed(1) + "Km²";
            else var m = n / 1e4,
                c = m.toFixed(1) + "ha";
            var g = google.maps.geometry.spherical.computeLength(i.getPath()),
                v = g / 1e3,
                y = v.toFixed(1) + "Km",
                f = '<div style="padding:10px 5px; margin-bottom:5px; border-bottom:1px solid #eee; text-align:left;"><strong>' + s + '</strong></div><div style="padding:5px; text-align:center;"><span style="text-align:center; padding:5px; margin-right:15px;"><img src="' + cspmds_vars.plugin_url + 'assets/img/svg/surface.svg" style="width:15px; margin-right:5px" /><span class="cspm_infowindow_distance">' + c + '</span></span><span style="text-align:center; padding:5px;"><img src="' + cspmds_vars.plugin_url + 'assets/img/svg/area_lenght.svg" style="width:15px; margin-right:5px" /><span class="cspm_infowindow_duration">' + y + "</span></span></div>",
                u = o.gmap3({
                    get: {
                        name: "infowindow"
                    }
                });
            u ? (u.open(_), u.setContent(f), u.setPosition(r)) : o.gmap3({
                infowindow: {
                    latLng: r,
                    options: {
                        content: f,
                        zIndex: 99999
                    }
                }
            })
        }
    }), a(document).on("mouseover", "li.cspmds_drawn_polygon", function() {
        var e = a(this).attr("data-map-id"),
            t = a(this).attr("data-polygon-id"),
            s = drawn_overlay[e],
            d = s[t];
        d.getPaths() && d.getVisible() === !0 && d.getEditable() === !1 && d.setOptions(overlay_highlight_style[e])
    }), a(document).on("mouseout", "li.cspmds_drawn_polygon", function() {
        var e = a(this).attr("data-map-id"),
            t = a(this).attr("data-polygon-id"),
            s = drawn_overlay[e],
            d = s[t];
        d.getPaths() && d.getVisible() === !0 && d.getEditable() === !1 && d.setOptions(overlay_default_style[e])
    }), a(document).on("click", "div.cspmds_help_btn", function() {
        a(this).attr("data-map-id");
        a(".cspmds_help_container").iziModal({
            title: cspmds_vars.help_txt,
            headerColor: progress_map_vars.map_script_args.initial.main_rgb_color,
            background: "#fff",
            width: 700,
            top: 50,
            bottom: 50,
            borderBottom: !1,
            padding: 20,
            radius: 2,
            zindex: 9999,
            closeOnEscape: !0,
            overlay: !0,
            overlayClose: !0,
            transitionIn: "fadeInDown",
            fullscreen: !1,
            openFullscreen: !1,
            bodyOverflow: !0,
            onClosed: function() {
                a(".cspmds_help_container").iziModal("destroy")
            }
        }), a(".cspmds_help_container").iziModal("open")
    })
}(jQuery);
